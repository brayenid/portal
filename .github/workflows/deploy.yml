name: Deploy

on:
  workflow_call:
    inputs:
      web:
        type: string
        description: Deploy website
        required: true
      pwa:
        type: string
        description: Deploy website
        required: true
      production:
        type: string
        description: Production release
        default: "false"

permissions:
  contents: read
  deployments: write
  statuses: write
  pull-requests: write

env:
  TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  TURBO_TEAM: ${{ secrets.VERCEL_TEAM }}
  TURBO_REMOTE_ONLY: true
  NODE_ENV: production
  VERCEL_ORG_ID: ${{ secrets.VERCEL_USER_ID }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  web:
    name: Website
    if: inputs.web == 'true'
    runs-on: ubuntu-latest
    env:
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_ID }}
    steps:
      - name: setup vars
        id: vars
        shell: bash
        run: |
          vercel_deploy="vercel deploy --prebuilt"
          vercel_build="vercel build"
          production="${{ inputs.production }}"

          if [[ $production == "true" ]]; then
            vercel_deploy="vercel deploy --prod --prebuilt"
            vercel_build="vercel build --prod"
          fi

          echo "vercel_deploy=${vercel_deploy}" >> "$GITHUB_OUTPUT"
          echo "vercel_build=${vercel_build}" >> "$GITHUB_OUTPUT"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: ./.github/actions/setup-node

      - name: Install Vercel CLI
        run: |
          npm install --global vercel@latest
          npm install -g turbo

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          pnpm install --filter=@pkrbt/web
          pnpm build --filter=@pkrbt/web
          ${{ steps.vars.outputs.vercel_build }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: |
          ${{ steps.vars.outputs.vercel_deploy }} --token=${{ secrets.VERCEL_TOKEN }}
