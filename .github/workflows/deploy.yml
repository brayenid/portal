name: Deploy

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_USER_ID }}

on:
  workflow_call:

jobs:
  web:
    runs-on: ubuntu-latest
    env:
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_ID }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        id: vars
        shell: bash
        run: |
          echo "store_path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

          deploy_target="https://dev.pkrbt.id"
          if [[ github.ref_name == 'main' ]] || [[ github.ref_name == 'beta' ]]; then
            deploy_target="https://pkrbt.id"
          fi
          echo "deploy_target=${deploy_target}" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.vars.outputs.store_path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          pnpm install
          pnpm build
          vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      - name: Send notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            **DEPLOYED**
            commit: **${{ github.event.head_commit.message }}**
            branch: **${{ github.ref_name }}**
            to: ${{ steps.vars.outputs.deploy_target }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: development
        shell: bash
        if: github.ref_name == 'next' || github.ref_name == 'debug'
        run: |
          curl --request GET --header "Accept: application/json" --header "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" ${{ secrets.CF_DEV_URL }}

      - name: production
        shell: bash
        if: github.ref_name == 'main' || github.ref_name == 'beta'
        run: |
          curl --request GET --header "Accept: application/json" --header "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" ${{ secrets.CF_PROD_URL }}
